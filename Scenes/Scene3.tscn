[gd_scene load_steps=61 format=2]

[ext_resource path="res://Scenes/Scene3.gd" type="Script" id=1]
[ext_resource path="res://Assets/Textures/Scene1/texttest.jpg" type="Texture" id=2]
[ext_resource path="res://Scenes/Ojos/ojo1.png" type="Texture" id=3]
[ext_resource path="res://Scenes/Ojos/ojo3.png" type="Texture" id=4]
[ext_resource path="res://Scenes/Ojos/ojo2.png" type="Texture" id=5]
[ext_resource path="res://Scenes/Player/Player.tscn" type="PackedScene" id=6]
[ext_resource path="res://Assets/SFX/2_todas las imÃ¡genes que componen la memoria del cuerpo.ogg" type="AudioStream" id=7]
[ext_resource path="res://Scenes/eye3_sprite.gd" type="Script" id=8]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;
// Using code from

// mla for the  Colourful Apollonia shader
// https://www.shadertoy.com/view/tsScDt
// Ported to Godot and customized for Fragment Forge by Db0

// Licence: Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License
// https://creativecommons.org/licenses/by-nc-sa/3.0/deed.en_US

uniform bool is_card = true;
uniform float iTime;
uniform sampler2D iChannel0;
uniform sampler2D iChannel1;
uniform vec2 iChannelResolution0;

//vec2 iResolution =  1.0 / SCREEN_PIXEL_SIZE; // for copy-paste

const int AA = 2;
uniform float N = 3.0;
const int max_iterations = 100;
const float pi = 3.14159265;

bool checkinverse(inout vec2 pos, vec3 c, float s, inout float mindist2) {
  vec2 p = pos-c.xy;
  float p2 = dot(p,p);
  float d2 = s*p2 - s*c.z;
  if (d2 > 0.0) {
    mindist2 = min(d2,mindist2);
    return false;
  }
  pos = p*c.z/p2 + c.xy;
  return true;
}
  
bool checkinverse2(inout vec2 pos, vec3 c, float s) {
  float mindist2;
  return checkinverse(pos,c,s,mindist2);
}

vec2 invert(vec2 pos, vec3 c) {
  vec2 p = pos-c.xy;
  float p2 = dot(p,p);
  return p*c.z/p2 + c.xy;
}
  
vec4 gasket(vec2 pos){
  float theta = pi/N;
  float r = 1.0/cos(theta);
  float s = tan(theta);
  float r2min = 0.0;
  for(int n = 0; n < max_iterations; n++){
    float mindist2 = 1e8;
    vec3 c1 = vec3(0,0,pow(r-s,2.0));
    vec3 c2 = vec3(0,0,pow(r+s,2.0));
    if (checkinverse(pos,c1,1.0,mindist2)) {
    } else if (checkinverse(pos,c2,-1.0,mindist2)) {
    } else {
      bool found = false;
      for (float i = 0.0; i < N; i++) {
        float t = 0.2*iTime/2.;
        vec3 c = vec3(r*sin(2.0*i*theta+t), r*cos(2.0*i*theta+t), s*s);
        if (checkinverse(pos,c,1.0,mindist2)) {
          found = true;
          break;
        }
      }
      if (!found) return vec4(pos,float(n),mindist2);
    }
  }
  return vec4(pos,float(max_iterations),r2min);
}

// Smooth HSV to RGB conversion 
// Function by iq, from https://www.shadertoy.com/view/MsS3Wc
vec3 hsv2rgb( in vec3 c ) {
  vec3 rgb = clamp( abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0 );
  rgb = rgb*rgb*(3.0-2.0*rgb); // cubic smoothing	
  return c.z * mix( vec3(1.0), rgb, c.y);
}

vec3 getCol(vec4 n){
  float t = iTime/2.;
  return hsv2rgb(vec3(mod((t+n.z)/50.0,1.0),0.8,0.8));
}

void fragment(){
  vec2 m = vec2(0,0.8);
  vec2 iResolution =  1.0 / SCREEN_PIXEL_SIZE; // for copy-paste
//  if (iMouse.x != 0.0) {
//    m = 2.0 * iMouse.xy / iResolution.y - vec2(iResolution.x / iResolution.y, 1.0);
//  }
  vec2 c = m*(1.0/dot(m,m));
  vec3 col = vec3(0);
  for (int i = 0; i < AA; i++) {
    for (int j = 0; j < AA; j++) {
      vec2 z = UV * 2. +vec2(float(i),float(j))/float(AA)-UV.xy;
      z -= 0.5 * 2. +vec2(float(i),float(j))/float(AA)-UV.xy;
//      vec2 z = (2.0*FRAGCOORD.xy+vec2(float(i),float(j))/float(AA)-iResolution.xy)/iResolution.y;
	if(!is_card){
		z.x *= iResolution.x/iResolution.y;
	} 
      if (false) {
        z.y += 1.0;
        z = invert(z,vec3(0,-1,2)); // Map half plane to unit disk.
      }
      z = invert(z,vec3(c,dot(c,c)-1.0));
      vec4 data = gasket(z);
      float d = 1.0/(sqrt(data.w)+1.0);
      col += 0.8*d*getCol(data);
    }
  }
  col /= float(AA*AA);
  COLOR = vec4(pow(col,vec3(0.4545)),1);
}
"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/is_card = true
shader_param/iTime = 0.0
shader_param/iChannelResolution0 = Vector2( 0, 0 )
shader_param/N = 3.0

[sub_resource type="CircleShape2D" id=39]
radius = 30.0035

[sub_resource type="AtlasTexture" id=40]
flags = 4
atlas = ExtResource( 4 )
region = Rect2( 0, 0, 120, 120 )

[sub_resource type="AtlasTexture" id=41]
flags = 4
atlas = ExtResource( 4 )
region = Rect2( 120, 0, 120, 120 )

[sub_resource type="AtlasTexture" id=42]
flags = 4
atlas = ExtResource( 4 )
region = Rect2( 240, 0, 120, 120 )

[sub_resource type="AtlasTexture" id=43]
flags = 4
atlas = ExtResource( 4 )
region = Rect2( 360, 0, 120, 120 )

[sub_resource type="AtlasTexture" id=44]
flags = 4
atlas = ExtResource( 4 )
region = Rect2( 480, 0, 120, 120 )

[sub_resource type="AtlasTexture" id=45]
flags = 4
atlas = ExtResource( 4 )
region = Rect2( 0, 120, 120, 120 )

[sub_resource type="AtlasTexture" id=46]
flags = 4
atlas = ExtResource( 4 )
region = Rect2( 120, 120, 120, 120 )

[sub_resource type="AtlasTexture" id=47]
flags = 4
atlas = ExtResource( 4 )
region = Rect2( 240, 120, 120, 120 )

[sub_resource type="SpriteFrames" id=48]
animations = [ {
"frames": [ SubResource( 40 ), SubResource( 41 ), SubResource( 42 ), SubResource( 43 ), SubResource( 44 ), SubResource( 45 ), SubResource( 46 ), SubResource( 47 ) ],
"loop": true,
"name": "default",
"speed": 5.0
} ]

[sub_resource type="CircleShape2D" id=3]
radius = 27.2322

[sub_resource type="AtlasTexture" id=4]
flags = 4
atlas = ExtResource( 3 )
region = Rect2( 0, 0, 80, 60 )

[sub_resource type="AtlasTexture" id=5]
flags = 4
atlas = ExtResource( 3 )
region = Rect2( 80, 0, 80, 60 )

[sub_resource type="AtlasTexture" id=6]
flags = 4
atlas = ExtResource( 3 )
region = Rect2( 160, 0, 80, 60 )

[sub_resource type="AtlasTexture" id=7]
flags = 4
atlas = ExtResource( 3 )
region = Rect2( 240, 0, 80, 60 )

[sub_resource type="AtlasTexture" id=8]
flags = 4
atlas = ExtResource( 3 )
region = Rect2( 320, 0, 80, 60 )

[sub_resource type="AtlasTexture" id=9]
flags = 4
atlas = ExtResource( 3 )
region = Rect2( 0, 60, 80, 60 )

[sub_resource type="AtlasTexture" id=10]
flags = 4
atlas = ExtResource( 3 )
region = Rect2( 80, 60, 80, 60 )

[sub_resource type="AtlasTexture" id=11]
flags = 4
atlas = ExtResource( 3 )
region = Rect2( 160, 60, 80, 60 )

[sub_resource type="AtlasTexture" id=12]
flags = 4
atlas = ExtResource( 3 )
region = Rect2( 240, 60, 80, 60 )

[sub_resource type="AtlasTexture" id=13]
flags = 4
atlas = ExtResource( 3 )
region = Rect2( 320, 60, 80, 60 )

[sub_resource type="AtlasTexture" id=14]
flags = 4
atlas = ExtResource( 3 )
region = Rect2( 0, 120, 80, 60 )

[sub_resource type="SpriteFrames" id=15]
animations = [ {
"frames": [ SubResource( 4 ), SubResource( 5 ), SubResource( 6 ), SubResource( 7 ), SubResource( 8 ), SubResource( 9 ), SubResource( 10 ), SubResource( 11 ), SubResource( 12 ), SubResource( 13 ), SubResource( 14 ) ],
"loop": true,
"name": "default",
"speed": 5.0
} ]

[sub_resource type="CircleShape2D" id=16]
radius = 25.9449

[sub_resource type="AtlasTexture" id=17]
flags = 4
atlas = ExtResource( 5 )
region = Rect2( 0, 0, 41, 41 )

[sub_resource type="AtlasTexture" id=18]
flags = 4
atlas = ExtResource( 5 )
region = Rect2( 41, 0, 41, 41 )

[sub_resource type="AtlasTexture" id=19]
flags = 4
atlas = ExtResource( 5 )
region = Rect2( 82, 0, 41, 41 )

[sub_resource type="AtlasTexture" id=20]
flags = 4
atlas = ExtResource( 5 )
region = Rect2( 123, 0, 41, 41 )

[sub_resource type="AtlasTexture" id=21]
flags = 4
atlas = ExtResource( 5 )
region = Rect2( 164, 0, 41, 41 )

[sub_resource type="AtlasTexture" id=22]
flags = 4
atlas = ExtResource( 5 )
region = Rect2( 0, 41, 41, 41 )

[sub_resource type="AtlasTexture" id=23]
flags = 4
atlas = ExtResource( 5 )
region = Rect2( 41, 41, 41, 41 )

[sub_resource type="AtlasTexture" id=24]
flags = 4
atlas = ExtResource( 5 )
region = Rect2( 82, 41, 41, 41 )

[sub_resource type="AtlasTexture" id=25]
flags = 4
atlas = ExtResource( 5 )
region = Rect2( 123, 41, 41, 41 )

[sub_resource type="AtlasTexture" id=26]
flags = 4
atlas = ExtResource( 5 )
region = Rect2( 164, 41, 41, 41 )

[sub_resource type="AtlasTexture" id=27]
flags = 4
atlas = ExtResource( 5 )
region = Rect2( 0, 82, 41, 41 )

[sub_resource type="AtlasTexture" id=28]
flags = 4
atlas = ExtResource( 5 )
region = Rect2( 41, 82, 41, 41 )

[sub_resource type="AtlasTexture" id=29]
flags = 4
atlas = ExtResource( 5 )
region = Rect2( 82, 82, 41, 41 )

[sub_resource type="AtlasTexture" id=30]
flags = 4
atlas = ExtResource( 5 )
region = Rect2( 123, 82, 41, 41 )

[sub_resource type="AtlasTexture" id=31]
flags = 4
atlas = ExtResource( 5 )
region = Rect2( 164, 82, 41, 41 )

[sub_resource type="AtlasTexture" id=32]
flags = 4
atlas = ExtResource( 5 )
region = Rect2( 0, 123, 41, 41 )

[sub_resource type="AtlasTexture" id=33]
flags = 4
atlas = ExtResource( 5 )
region = Rect2( 41, 123, 41, 41 )

[sub_resource type="AtlasTexture" id=34]
flags = 4
atlas = ExtResource( 5 )
region = Rect2( 82, 123, 41, 41 )

[sub_resource type="AtlasTexture" id=35]
flags = 4
atlas = ExtResource( 5 )
region = Rect2( 123, 123, 41, 41 )

[sub_resource type="AtlasTexture" id=36]
flags = 4
atlas = ExtResource( 5 )
region = Rect2( 164, 123, 41, 41 )

[sub_resource type="AtlasTexture" id=37]
flags = 4
atlas = ExtResource( 5 )
region = Rect2( 0, 164, 41, 41 )

[sub_resource type="SpriteFrames" id=38]
animations = [ {
"frames": [ SubResource( 17 ), SubResource( 18 ), SubResource( 19 ), SubResource( 20 ), SubResource( 21 ), SubResource( 22 ), SubResource( 23 ), SubResource( 24 ), SubResource( 25 ), SubResource( 26 ), SubResource( 27 ), SubResource( 28 ), SubResource( 29 ), SubResource( 30 ), SubResource( 31 ), SubResource( 32 ), SubResource( 33 ), SubResource( 34 ), SubResource( 35 ), SubResource( 36 ), SubResource( 37 ) ],
"loop": true,
"name": "default",
"speed": 5.0
} ]

[sub_resource type="RectangleShape2D" id=49]
extents = Vector2( 310, 8 )

[sub_resource type="RectangleShape2D" id=50]
extents = Vector2( 6.5, 305 )

[sub_resource type="RectangleShape2D" id=51]
extents = Vector2( 306.5, 8.5 )

[sub_resource type="RectangleShape2D" id=52]
extents = Vector2( 3.875, 300.75 )

[node name="scena_fractal" type="Node2D"]
script = ExtResource( 1 )

[node name="FondoFractal" type="TextureRect" parent="."]
material = SubResource( 2 )
margin_left = 4.05774
margin_top = 0.454681
margin_right = 604.058
margin_bottom = 600.455
rect_pivot_offset = Vector2( -385.07, 233.243 )
texture = ExtResource( 2 )
expand = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="eye3" type="RigidBody2D" parent="."]
position = Vector2( 4.05774, 0.454681 )
applied_force = Vector2( 10, 0 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="eye3"]
position = Vector2( 130.813, 102.272 )
rotation = 2.87979
shape = SubResource( 39 )

[node name="eye3_sprite" type="AnimatedSprite" parent="eye3"]
position = Vector2( 130.813, 102.272 )
rotation = 2.87979
frames = SubResource( 48 )
frame = 6
playing = true

[node name="eye4" type="RigidBody2D" parent="."]
position = Vector2( -15, 254 )
gravity_scale = 0.0
__meta__ = {
"_edit_group_": true
}

[node name="CollisionShape2D" type="CollisionShape2D" parent="eye4"]
position = Vector2( 130.813, 102.272 )
rotation = 2.87979
shape = SubResource( 39 )

[node name="eye3_sprite" type="AnimatedSprite" parent="eye4"]
position = Vector2( 130.813, 102.272 )
rotation = 2.87979
frames = SubResource( 48 )
frame = 5
playing = true

[node name="eye5" type="RigidBody2D" parent="."]
position = Vector2( 335, 406 )
gravity_scale = 0.0
__meta__ = {
"_edit_group_": true
}

[node name="CollisionShape2D" type="CollisionShape2D" parent="eye5"]
position = Vector2( 130.813, 102.272 )
rotation = 2.87979
shape = SubResource( 39 )

[node name="eye3_sprite" type="AnimatedSprite" parent="eye5"]
position = Vector2( 130.813, 102.272 )
rotation = 2.87979
frames = SubResource( 48 )
frame = 5
playing = true

[node name="eye1" type="RigidBody2D" parent="."]
position = Vector2( 4.05774, 0.454681 )
gravity_scale = 0.0
contact_monitor = true
angular_damp = 6.602

[node name="CollisionShape2D" type="CollisionShape2D" parent="eye1"]
position = Vector2( 300.63, 351.817 )
shape = SubResource( 3 )

[node name="eye1_sprite" type="AnimatedSprite" parent="eye1"]
position = Vector2( 301.134, 353.351 )
frames = SubResource( 15 )
frame = 3
playing = true

[node name="eye2" type="RigidBody2D" parent="."]
position = Vector2( 4.05774, 0.454681 )
gravity_scale = 0.0

[node name="CollisionShape2D" type="CollisionShape2D" parent="eye2"]
position = Vector2( 451.9, 102.393 )
shape = SubResource( 16 )

[node name="eye2_sprite" type="AnimatedSprite" parent="eye2"]
position = Vector2( 451.9, 102.393 )
frames = SubResource( 38 )
frame = 10
playing = true

[node name="eye7" type="RigidBody2D" parent="."]
position = Vector2( -94, 20 )
gravity_scale = 0.0

[node name="CollisionShape2D" type="CollisionShape2D" parent="eye7"]
position = Vector2( 205, 490 )
shape = SubResource( 16 )

[node name="eye2_sprite" type="AnimatedSprite" parent="eye7"]
position = Vector2( 205.942, 487.545 )
frames = SubResource( 38 )
frame = 9
playing = true

[node name="Player" parent="." instance=ExtResource( 6 )]
position = Vector2( 299, 79 )

[node name="AudioStreamPlayer" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 7 )
autoplay = true

[node name="StaticBody2D" type="StaticBody2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="StaticBody2D"]
position = Vector2( 302, -9 )
shape = SubResource( 49 )

[node name="StaticBody2D2" type="StaticBody2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="StaticBody2D2"]
position = Vector2( -3.5, 295 )
shape = SubResource( 50 )

[node name="StaticBody2D3" type="StaticBody2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="StaticBody2D3"]
position = Vector2( 299.5, 604.5 )
shape = SubResource( 51 )

[node name="StaticBody2D4" type="StaticBody2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="StaticBody2D4"]
position = Vector2( 612.125, 302.25 )
shape = SubResource( 52 )

[node name="eye3_sprite" type="AnimatedSprite" parent="."]
position = Vector2( 298, 236 )
rotation = 2.87979
frames = SubResource( 48 )
frame = 2
playing = true
script = ExtResource( 8 )
